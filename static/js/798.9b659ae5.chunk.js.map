{"version":3,"file":"static/js/798.9b659ae5.chunk.js","mappings":"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","sources":["component/movie/MovieCard.js","page/MovieDetail.js"],"sourcesContent":["import React from 'react';\r\nimport {AiFillStar} from \"react-icons/ai\"\r\nimport { BsFillPlayCircleFill } from 'react-icons/bs'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { originalImg } from '../../config';\r\nimport Button from '../button/Button';\r\nconst MovieCard = ({item}) => {\r\n    const {title,vote_average,release_date,poster_path,id} = item;\r\n    const navigate = useNavigate();\r\n    return (\r\n       \r\n          <div className=\"flex flex-col movie-card rounded-lg p-3  bg-gradient-to-t from-slate-800 to-slate-700 h-full select-none\">\r\n            <img src={`${originalImg}/${poster_path}`} alt=\"\" \r\n            className=\"w-full h-[250px] object-cover rounded-lg mb-5\"/>\r\n            <div className=\"flex flex-col flex-1\">\r\n            <h3 className=\" text-xl m-auto\">{title}</h3>\r\n            <div className=\"flex  justify-between items-center text-sm mt-3 mb-3 \">\r\n              <span className=\"opacity-50\">{new Date(release_date).getFullYear()}</span>\r\n              <div className=\"flex items-center justify-between\">\r\n              <span className=\"opacity-50\">{vote_average} </span>\r\n              <AiFillStar className=\"text-[#fda900] ml-1 text-base \"></AiFillStar>\r\n              </div>\r\n              \r\n            </div>\r\n           <Button onClick={()=> navigate(`/movies/${id}`)}>Watch now\r\n\r\n            <BsFillPlayCircleFill></BsFillPlayCircleFill> </Button>\r\n          </div>\r\n          </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default MovieCard;","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport useSWR from \"swr\";\r\nimport MovieCard from \"../component/movie/MovieCard\";\r\nimport { fetcher, originalImg, tmdbAPI } from \"../config\";\r\nimport \"swiper/scss\";\r\n\r\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=\r\nconst MovieDetail = () => {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(tmdbAPI.getMoiveDetail(movieId), fetcher);\r\n  if (!data) return null;\r\n  const { backdrop_path, poster_path, title, genres, overview } = data;\r\n  return (\r\n    <div className='py-10'>\r\n      <div className='w-full h-[600px] relative  rounded-lg '>\r\n        <div className='absolute inset-0 bg-black bg-opacity-60'></div>\r\n        <div\r\n          className='w-full h-full bg-cover bg-no-repeat rounded-lg  '\r\n          style={{\r\n            backgroundImage: `url(${originalImg}/${backdrop_path})`,\r\n          }}\r\n        ></div>\r\n      </div>\r\n      <div className='w-full h-[400px] max-w-[800px] mx-auto -mt-[200px] relative pb-10'>\r\n        <img\r\n          src={`${originalImg}/${poster_path}`}\r\n          alt=''\r\n          className='w-full h-full object-cover rounded-lg'\r\n        />\r\n      </div>\r\n      <h1 className='text-center text-4xl font-bold mb-10 text-white'>\r\n        {title}\r\n      </h1>\r\n      <div className='flex items-center justify-center gap-x-5 mb-10 text-w'>\r\n        {genres.length > 0 &&\r\n          genres.map((item) => (\r\n            <span\r\n              className='py-2 px-4 border border-primary text-primary rounded-lg'\r\n              key={item.id}\r\n            >\r\n              {item.name}\r\n            </span>\r\n          ))}\r\n      </div>\r\n      <p className='text-center text-sm leading-relaxed max-w-[730px] mx-auto mb-10'>\r\n        {overview}\r\n      </p>\r\n      <MovieCredit></MovieCredit>\r\n      <MovieVideos></MovieVideos>\r\n      <MovieSimilar></MovieSimilar>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction MovieCredit() {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, \"credits\"), fetcher);\r\n  if (!data) return null;\r\n  const { cast } = data;\r\n  if (!cast || cast.length <= 0) return null;\r\n  return (\r\n    <div className='py-10'>\r\n      <h2 className='te   xt-center text-3xl mb-10 font-bold'>Casts</h2>\r\n      <div className='grid  grid-cols-4 gap-x-5 px-5'>\r\n        {cast.slice(0, 4).map((item) => (\r\n          <div className='cast-item' key={item.id}>\r\n            <img\r\n              src={`${originalImg}/${item.profile_path}`}\r\n              alt=''\r\n              className='w-full h-[350px] object-cover rounded-lg mb-3'\r\n            />\r\n            <h3 className='text-xl text-center font-medium'>{item.name}</h3>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction MovieVideos() {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, \"videos\"), fetcher);\r\n  if (!data) return null;\r\n\r\n  const { results } = data;\r\n  console.log(data);\r\n  if (!results || results.length <= 0) return null;\r\n  return (\r\n    <div className='py-10 mb-20'>\r\n      <div className='flex flex-col gap-10'>\r\n        {results.slice(0, 1).map((item) => (\r\n          <div key={item.id} className='w-full h-[650px] aspect-video'>\r\n            <div className='bg-secondary inline-block p-4 rounded-lg mb-11 text-xl font-medium '>\r\n              <h3>{item.name}</h3>\r\n            </div>\r\n            <iframe\r\n              className='w-full h-full object-fill'\r\n              src={`https://www.youtube.com/embed/${item.key}`}\r\n              title='Highlights | ANH vs IRAN | Tam sư đại thắng, khẳng định sức mạnh ứng cử viên vô địch!'\r\n              allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\r\n              allowFullScreen\r\n            ></iframe>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MovieSimilar() {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, \"similar\"), fetcher);\r\n  if (!data) return null;\r\n\r\n  const { results } = data;\r\n  if (!results || results.length <= 0) return null;\r\n  console.log(data);\r\n  return (\r\n    <div className='py-10 px-5'>\r\n      <h2 className='text-3xl font-medium mb-10 flex justify-center items-end'>\r\n        Similar movies\r\n      </h2>\r\n      <div className='movie-list '>\r\n        <Swiper grabCursor={\"true\"} spaceBetween={40} slidesPerView={\"auto\"}>\r\n          {results.length > 0 &&\r\n            results.map((item) => (\r\n              <SwiperSlide key={item.id}>\r\n                <MovieCard item={item}></MovieCard>\r\n              </SwiperSlide>\r\n            ))}\r\n        </Swiper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default MovieDetail;\r\n"],"names":["item","title","vote_average","release_date","poster_path","id","navigate","useNavigate","className","src","originalImg","alt","Date","getFullYear","onClick","MovieCredit","movieId","useParams","data","useSWR","tmdbAPI","fetcher","cast","length","slice","map","profile_path","name","MovieVideos","results","console","log","key","allow","allowFullScreen","MovieSimilar","grabCursor","spaceBetween","slidesPerView","backdrop_path","genres","overview","style","backgroundImage"],"sourceRoot":""}